statement ok
set enable_optimizer = false;

statement ok
set force_join = merge;

statement ok
create table merge_left_1(id int, info varchar(100));

statement ok
create table merge_middle_1(id int, score double);

statement ok
create table merge_right_1(id int, name varchar(100));

statement ok
create table merge_left_2(id int, info varchar(100));

statement ok
create table merge_right_2(id int, score double);

statement ok
create table merge_empty(id int, info varchar(100));

statement ok
create table merge_left_3(id int, info varchar(100));

statement ok
create table merge_right_3(id int, score double);

query
insert into merge_left_1 values(2, 'b'), (3, 'c'), (1, 'a'), (2, 'bb'), (1, 'aa'), (2, 'bbb');
----
6

query
insert into merge_middle_1 values(4, 4.4), (3, 3.3), (2, 2.2), (3, 3.4), (2, 2.3), (3, 3.5);
----
6

query
insert into merge_right_1 values(3, 'name_c'), (1, 'name_a'), (2, 'name_b'), (3, 'name_cc');
----
4

query
insert into merge_left_2 values(1, 'a'), (1, 'aa'), (1, 'aaa'), (1, 'aaaa'), (1, 'aaaaa');
----
5

query
insert into merge_right_2 values(1, 1.1), (1, 1.2), (1, 1.3), (1, 1.4), (1, 1.5);
----
5

query
insert into merge_left_3 values(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd'), (5, 'e'), (6, 'f'), (7, 'g'), (8, 'h'), (9, 'i'), (10, 'j');
----
10

query
insert into merge_right_3 values(100, 1.1), (200, 2.2), (300, 3.3), (400, 4.4), (500, 5.5), (600, 6.6), (700, 7.7), (800, 8.8), (900, 9.9), (1000, 10.1);
----
10

query rowsort
explain (optimizer) select merge_left_1.id, merge_left_1.info, merge_middle_1.score from merge_left_1 join merge_middle_1 on merge_left_1.id = merge_middle_1.id;
----
===Optimizer===
Projection: ["merge_left_1.id", "merge_left_1.info", "merge_middle_1.score"]
  MergeJoin: left=merge_left_1.id right=merge_middle_1.id
    Order:
      SeqScan: merge_left_1
    Order:
      SeqScan: merge_middle_1

query rowsort
select merge_left_1.id, merge_left_1.info, merge_middle_1.score from merge_left_1 join merge_middle_1 on merge_left_1.id = merge_middle_1.id;
----
2 b 2.2
2 bb 2.2
2 bbb 2.2
2 b 2.3
2 bb 2.3
2 bbb 2.3
3 c 3.3
3 c 3.4
3 c 3.5

# 3 tables
query rowsort
select merge_left_1.id, merge_left_1.info, merge_middle_1.score, merge_right_1.name from (merge_left_1 join merge_middle_1 on merge_left_1.id = merge_middle_1.id) join merge_right_1 on merge_left_1.id = merge_right_1.id;
----
2 b 2.2 name_b
2 bb 2.2 name_b
2 bbb 2.2 name_b
2 b 2.3 name_b
2 bb 2.3 name_b
2 bbb 2.3 name_b
3 c 3.3 name_c
3 c 3.4 name_c
3 c 3.5 name_c
3 c 3.3 name_cc
3 c 3.4 name_cc
3 c 3.5 name_cc

query rowsort
select merge_left_2.id, merge_left_2.info, merge_right_2.score from merge_left_2 join merge_right_2 on merge_left_2.id = merge_right_2.id;
----
1 a 1.1
1 a 1.2
1 a 1.3
1 a 1.4
1 a 1.5
1 aa 1.1
1 aa 1.2
1 aa 1.3
1 aa 1.4
1 aa 1.5
1 aaa 1.1
1 aaa 1.2
1 aaa 1.3
1 aaa 1.4
1 aaa 1.5
1 aaaa 1.1
1 aaaa 1.2
1 aaaa 1.3
1 aaaa 1.4
1 aaaa 1.5
1 aaaaa 1.1
1 aaaaa 1.2
1 aaaaa 1.3
1 aaaaa 1.4
1 aaaaa 1.5

query
select * from merge_left_1 join merge_empty on merge_left_1.id = merge_empty.id;
----

query
select * from merge_left_3 join merge_right_3 on merge_left_3.id = merge_right_3.id;
----

statement ok
drop table merge_left_1;

statement ok
drop table merge_middle_1;

statement ok
drop table merge_right_1;

statement ok
drop table merge_left_2;

statement ok
drop table merge_right_2;

statement ok
drop table merge_empty;

statement ok
drop table merge_left_3;

statement ok
drop table merge_right_3;
